/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers.
 * 2. Correct the line height in all browsers // Handled by RITMO
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
/* Document
   ========================================================================== */
@import url("https://fonts.googleapis.com/css?family=Merriweather:300,400,700|Muli:300,400,700");
html {
  font-family: "Muli", "Helvetica Neue", Helvetica, Arial, sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */
  /* Global box-sizing. Apply a natural box layout model to all elements, but allowing components to change */
  box-sizing: border-box;
  color: #3b3b3b;
  background: #fff; }

*, *:before, *:after {
  box-sizing: inherit; }

html {
  font-size: 112.5%;
  line-height: 1.333em; }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Replace the outline on focused links with a yellow background
 */
a:focus {
  outline: 0;
  background: yellow; }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: 700; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none;
  max-width: 100%;
  height: auto; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

a {
  text-decoration: none; }
  a:link {
    color: green; }
  a:visited {
    color: #005600; }
  a:focus {
    color: #005600; }
  a:hover {
    text-decoration: underline;
    color: #005600; }
  a:active {
    color: green; }

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol {
  margin-top: 0;
  margin-bottom: 1.333rem; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: normal; }

h1,
h2,
h3,
h4 {
  font-family: "Merriweather", Georgia, "Times News Roman", Times, serif; }

h1 {
  font-size: 44px;
  font-size: 2.441rem;
  line-height: 48px;
  line-height: 2.666rem; }

h2 {
  font-size: 35px;
  font-size: 1.953rem;
  line-height: 42px;
  line-height: 2.33275rem; }

h3 {
  font-size: 28px;
  font-size: 1.563rem;
  line-height: 36px;
  line-height: 1.9995rem; }

h4 {
  font-size: 23px;
  font-size: 1.25rem;
  line-height: 30px;
  line-height: 1.66625rem; }

h5 {
  font-size: 14px;
  font-size: 0.8rem;
  line-height: 24px;
  line-height: 1.333rem; }

h6 {
  font-size: 12px;
  font-size: 0.64rem;
  line-height: 18px;
  line-height: 0.99975rem; }

.hidden {
  position: absolute;
  left: -10000px;
  top: auto;
  width: 1px;
  height: 1px;
  overflow: hidden; }

.pkp_structure_page {
  max-width: 1200px;
  margin: 0 auto;
  padding-left: 1.333rem;
  padding-right: 1.333rem; }

.pkp_structure_head {
  margin-bottom: 1.333rem;
  border-bottom-width: 1px;
  border-bottom-width: 0.05556rem;
  padding-bottom: 23px;
  padding-bottom: 1.27744rem;
  border-bottom-color: #ebebeb;
  border-bottom-style: solid;
  position: relative; }

.pkp_site_name_wrapper {
  background-color: #6e6e6e;
  padding: 1.333rem;
  margin-bottom: 1.333rem; }

.pkp_site_name {
  margin: 0; }
  .pkp_site_name a, .pkp_site_name img {
    display: block; }

.pkp_navigation_user_wrapper {
  position: absolute;
  top: 0;
  right: 0.6665rem; }

.pkp_structure_content {
  margin-bottom: 1.333rem;
  border-bottom-width: 1px;
  border-bottom-width: 0.05556rem;
  padding-bottom: 23px;
  padding-bottom: 1.27744rem;
  border-bottom-color: #ebebeb;
  border-bottom-style: solid; }

.pkp_nav_list {
  padding: 0; }
  .pkp_nav_list li {
    list-style-type: none;
    display: inline-block;
    position: relative; }
    .pkp_nav_list li a {
      padding: 0.6665rem;
      text-transform: uppercase;
      font-weight: 700;
      font-size: 14px;
      font-size: 0.8rem;
      line-height: 24px;
      line-height: 1.333rem;
      display: block; }
      .pkp_nav_list li a, .pkp_nav_list li a:link, .pkp_nav_list li a:visited, .pkp_nav_list li a:focus, .pkp_nav_list li a:hover, .pkp_nav_list li a:active {
        border-bottom: none;
        text-decoration: none;
        color: #3b3b3b; }
    .pkp_nav_list li:hover ul {
      display: block; }

.pkp_navigation_primary {
  margin-bottom: 1.333rem; }
  .pkp_navigation_primary li a {
    padding: 0.6665rem 1.333rem;
    letter-spacing: 0.2em;
    background-color: #ebebeb;
    display: block; }
    .pkp_navigation_primary li a, .pkp_navigation_primary li a:link, .pkp_navigation_primary li a:visited, .pkp_navigation_primary li a:focus, .pkp_navigation_primary li a:hover, .pkp_navigation_primary li a:active {
      border-bottom: none;
      text-decoration: none;
      color: #3b3b3b; }
    .pkp_navigation_primary li a:hover {
      background-color: #cccccc; }
  .pkp_navigation_primary li:hover ul {
    display: block; }
  .pkp_navigation_primary li ul {
    margin: 0;
    padding: 0.6665rem;
    position: absolute;
    top: 100%;
    left: 0;
    display: none;
    background: #adadad; }
    .pkp_navigation_primary li ul li {
      display: block; }
      .pkp_navigation_primary li ul li a {
        padding: 0.6665rem;
        font-size: 12px;
        font-size: 0.64rem;
        line-height: 18px;
        line-height: 0.99975rem; }

.pkp_navigation_user li a {
  padding: 0 0.16662rem;
  font-size: 12px;
  font-size: 0.64rem;
  line-height: 18px;
  line-height: 0.99975rem; }
  .pkp_navigation_user li a, .pkp_navigation_user li a:link, .pkp_navigation_user li a:visited {
    color: #fff; }
  .pkp_navigation_user li a:focus, .pkp_navigation_user li a:hover {
    color: #cccccc; }
  .pkp_navigation_user li a:active {
    color: #fff; }

.cmp_breadcrumbs {
  margin-bottom: 1.333rem;
  border-bottom-width: 1px;
  border-bottom-width: 0.05556rem;
  padding-bottom: 23px;
  padding-bottom: 1.27744rem;
  border-bottom-color: #ebebeb;
  border-bottom-style: solid; }
  .cmp_breadcrumbs ol {
    padding: 0;
    margin: 0; }
    .cmp_breadcrumbs ol li {
      display: inline-block; }
      .cmp_breadcrumbs ol li h1 {
        font-size: 18px;
        font-size: 1rem;
        line-height: 24px;
        line-height: 1.333rem;
        font-family: "Muli", "Helvetica Neue", Helvetica, Arial, sans-serif;
        margin: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
